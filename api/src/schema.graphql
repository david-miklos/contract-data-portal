scalar Date

type BrandedProduct {
  brandedProductID: ID!
  brandedProductName: String
  medicinalProducts: [MedicinalProduct]
}

type MedicinalProduct {
  medicinalProductID: ID!
  medicinalProductName: String
  packSizes: [PackSize]
  pricing: Pricing
}

type PackSize {
  packID: ID!
  units: Int
  basePrice: Float
}

type Pricing {
  pricingID: ID!
  OSAfter12Months: Float
  PFSAfter9Months: Float
  noOSBefore12Months: Float
  noPFSBefore9Months: Float
}

type Treatment {
  treatmentID: ID!
  treatmentStart: Date!
}

type Patient {
  patientID: ID!
  age: Int!
  cancerStage: Int!
  undergoesTreatment: [Treatment!]!
    @relationship(type: "UNDERGOES_TREATMENT", direction: OUT)
  hasPFSInfo: [PFS_Info!]!
  hasOSInfo: [OS_Info!]!
}

type OS_Info {
  osID: ID!
  osDuration: Int!
}

type PFS_Info {
  pfsID: ID!
  pfsDuration: Int!
}

type Query {
  patient(patientID: ID!): Patient
    @cypher(statement: "MATCH (p:Patient {patientID: $patientID}) RETURN p")
  patients: [Patient!]! @cypher(statement: "MATCH (p:Patient) RETURN p")
}
